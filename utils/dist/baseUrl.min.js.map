{"version":3,"sources":["baseUrl.tsx"],"names":["axios_1","require","baseUrl","updateParamValue","data","params","window","location","href","indexOf","slice","split","updatedParams","__spreadArrays","forEach","item","key","value","paramIndex","findIndex","param","startsWith","push","pathname","join","convertPrice","priceLocal","localBasedOneUSD","targetBasedOnUSD","priceLKR","Math","round","exports","axiosRequest","cancelTokenSource","_a","url","_b","_c","method","cancel","CancelToken","source","config","cancelToken","token","request","_d","sent","isCancel","error_1","console","log","message"],"mappings":"ypDAAA,IAAAA,QAAAC,QAAA,SAIMC,QAAU,uCAsChB,SAAgBC,iBAAiBC,GAC/B,IAAMC,GAAgD,IAAvCC,OAAOC,SAASC,KAAKC,QAAQ,KAAcH,OAAOC,SAASC,KAAKE,MAAMJ,OAAOC,SAASC,KAAKC,QAAQ,KAAO,GAAGE,MAAM,KAAM,GAElIC,EAAaC,eAAOR,GAa1B,OAXAD,EAAKU,QAAQ,SAACC,GACJ,IAAAC,EAAAD,EAAAC,IAAKC,EAAAF,EAAAE,MACPC,EAAaN,EAAcO,UAAU,SAACC,GAAU,OAAAA,EAAMC,WAAcL,EAAG,QAEzD,IAAhBE,EACFN,EAAcM,GAAiBF,EAAG,IAAIC,EAEtCL,EAAcU,KAAQN,EAAG,IAAIC,KAIvBX,OAAOC,SAASgB,SAAQ,IAAIX,EAAcY,KAAK,KAE3D,SAAgBC,aAAaC,EAAoBC,EAAyBC,GAGxE,IAGMC,EAHWH,EAAaC,EAGFC,EAG5B,OAAOE,KAAKC,MAAiB,IAAXF,GAAkB,IA9DzBG,QAAAC,aAAe,WAC1B,IAAIC,EAEJ,OAAO,SAAOC,OAAEC,EAAAD,EAAAC,IAAKC,EAAAF,EAAA/B,KAAAA,OAAA,IAAAiC,EAAA,KAAAA,EAAaC,EAAAH,EAAAI,OAAAA,OAAA,IAAAD,EAAA,MAAAA,sHAE5BJ,GAEFA,EAAkBM,OAAO,0CAI3BN,EAAoBlC,QAAA,QAAMyC,YAAYC,0BAUC,6BAP/BC,EAA6B,CACjCP,IAAGA,EACHG,OAAMA,EACNnC,KAAIA,EACJwC,YAAaV,EAAkBW,OAGI,CAAA,EAAM7C,QAAA,QAAM8C,QAAQH,WACzD,MAAA,CAAA,EADqCI,EAAAC,OACrB5C,+BAEZJ,QAAAiD,SAASC,GAEXC,QAAQC,IAAI,oBAAqBF,EAAMG,SAGvCF,QAAQC,IAAI,wBAAyBF,EAAMG,uCAMnDrB,QAAA7B,iBAAAA,iBAkBA6B,QAAAP,aAAAA,aAWAO,QAAA,QAAe9B","file":"baseUrl.min.js","sourcesContent":["import axios, {AxiosRequestConfig, AxiosResponse, CancelTokenSource, isCancel,} from \"axios\";\r\n\r\n// const baseUrl = \"http://localhost:3000/v1/api\";\r\n\r\nconst baseUrl = \"https://api.supersconto24.com/v1/api\";\r\n\r\ntype AxiosRequestType = { url: string; data?: any; method?: string };\r\nexport const axiosRequest = () => {\r\n  let cancelTokenSource: CancelTokenSource;\r\n\r\n  return async ({ url, data = null, method = \"get\" }: AxiosRequestType) => {\r\n    // Check if a previous request was made\r\n    if (cancelTokenSource) {\r\n      // Cancel the previous request before making a new one\r\n      cancelTokenSource.cancel(\"Request canceled due to a new request.\");\r\n    }\r\n\r\n    // Create a new CancelToken\r\n    cancelTokenSource = axios.CancelToken.source();\r\n\r\n    try {\r\n      const config: AxiosRequestConfig = {\r\n        url,\r\n        method,\r\n        data,\r\n        cancelToken: cancelTokenSource.token,\r\n      };\r\n\r\n      const response: AxiosResponse<any> = await axios.request(config);\r\n      return response.data;\r\n    } catch (error: any) {\r\n      if (isCancel(error)) {\r\n        // Handle if the request was canceled\r\n        console.log(\"Request canceled:\", error.message);\r\n      } else {\r\n        // Handle other errors\r\n        console.log(\"Something went wrong:\", error.message);\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport function updateParamValue(data: any) {\r\n  const params = window.location.href.indexOf(\"?\") !== -1 ? window.location.href.slice(window.location.href.indexOf(\"?\") + 1).split(\"&\"): []\r\n\r\n  const updatedParams = [...params];\r\n\r\n  data.forEach((item: any) => {\r\n    const { key, value } = item;\r\n    const paramIndex = updatedParams.findIndex((param) => param.startsWith(`${key}=`));\r\n\r\n    if (paramIndex !== -1) {\r\n      updatedParams[paramIndex] = `${key}=${value}`;\r\n    } else {\r\n      updatedParams.push(`${key}=${value}`);\r\n    }\r\n  });\r\n\r\n  return `${window.location.pathname}?${updatedParams.join(\"&\")}`;\r\n}\r\nexport function convertPrice(priceLocal: number, localBasedOneUSD: number,targetBasedOnUSD: number) {\r\n\r\n  // Convert EUR to USD\r\n  const priceUSD = priceLocal / localBasedOneUSD;\r\n\r\n  // Convert USD to Target\r\n  const priceLKR = priceUSD * targetBasedOnUSD;\r\n\r\n  // Round the result to two decimal places\r\n  return Math.round(priceLKR * 100) / 100;\r\n}\r\nexport default baseUrl;\r\n"]}